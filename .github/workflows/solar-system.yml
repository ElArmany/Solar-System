name: solar system workflow
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - feature-workflow

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  unit-testing:
    name: Unit Testing
    strategy:
      matrix:
        nodejs_version: [18,19,20]
        operating_system: [ubuntu-latest,macos-latest]
        exclude:
          - nodejs_version: 21
            operating_system: macos-latest

    runs-on: ${{ matrix.operating_system }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.nodejs_version }}

      - name: Install Dependencies
        run: npm install

      - name: Unit Testing
        id: nodejs-unit-testing
        run: npm test

      - name: Archive test results
        uses: actions/upload-artifact@v3
        with:
          name: mocha-test-result
          path: test-results.xml
    
  Code-coverage:
    name: Code-Coverage
    needs: unit-testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Check Code Coverage
        continue-on-error: true
        run: npm run coverage
      
      - name: Archive Test Results
        #if: steps.nodejs-unit-testing.steps.outcome == 'failure' || steps.nodejs-unit-testing.steps.outcome == 'success'
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-result
          path: coverage
          retention-days: 5

  docker:
    name: Containerization
    needs: [Code-coverage, unit-testing]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Dockerhub login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false                # 3aiz a build bs m3ml4 push dlw2ty
          tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}       # generate new key

      - name: Docker Image Test
        run: |
              docker images
              docker run --name solar-system-app -d -p 3000:3000 -e MONGO_URI=$MONGO_URI -e MONGO_USERNAME=$MONGO_USERNAME \
              -e MONGO_PASSWORD=$MONGO_PASSWORD \
              ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
              export IP=$(docker inspect -f '{{range .NetworkSettings.Network}}{{.IPAddress}}{{end}}' solar-system)
              echo $IP
              docker inspect solar-system | grep -i IPAddress
              echo Testing Image URL using wget
              wget -q -O -127.0.0.1:3000/live | grep live